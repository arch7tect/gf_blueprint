<?xml version="1.0" encoding="ASCII"?>
<sse:Notebook xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sse="http://www.neoflex.ru/meta/sse" name="ScoringModel_DataLoad" shortName="DataLoad" description="Data Load, Train\Test split">
  <auditInfo changeUser="orlov" changeDateTime="2019-07-12T11:14:25.019+0300" createUser="psimanihin" createDateTime="2019-06-17T11:33:55.534+0300"/>
  <paragraphs name="ScoringModel_DataLoad_2019-06-17T11:34:00.561" title="Historical Data" textVisible="true" resultVisible="true" titleVisible="true" status="SUCCESS">
    <body xsi:type="sse:CodeBody" interpreter="R" text="# install.packages('smbinning')&#xD;&#xA;&#xD;&#xA;library(data.table)&#xD;&#xA;library(lubridate)&#xD;&#xA;library(ggplot2)&#xD;&#xA;library(smbinning)&#xD;&#xA;&#xD;&#xA;#DemoData &lt;- fread('hdfs://user/score/Modeling_Data.txt')&#xD;&#xA;DemoData &lt;- read.df(spark, path = '/user/score/Modeling_Data.txt', source = &quot;csv&quot;, delimiter=&quot;\t&quot;, inferSchema = &quot;true&quot;, header=&quot;true&quot;)&#xD;&#xA;DemoData  &lt;- as.data.frame(SparkR::collect(DemoData))&#xD;&#xA;DemoData &lt;- data.table(DemoData)&#xD;&#xA;&#xD;&#xA;str(DemoData)&#xD;&#xA;"/>
    <result xsi:type="sse:TextResult" data="&#xA;Attaching package: &#x2018;data.table&#x2019;&#xA;&#xA;The following objects are masked from &#x2018;package:SparkR&#x2019;:&#xA;&#xA;    between, cube, first, hour, last, like, minute, month, quarter,&#xA;    rollup, second, tables, year&#xA;&#xA;&#xA;Attaching package: &#x2018;lubridate&#x2019;&#xA;&#xA;The following objects are masked from &#x2018;package:data.table&#x2019;:&#xA;&#xA;    hour, isoweek, mday, minute, month, quarter, second, wday, week,&#xA;    yday, year&#xA;&#xA;The following objects are masked from &#x2018;package:SparkR&#x2019;:&#xA;&#xA;    hour, minute, month, quarter, second, year&#xA;&#xA;The following object is masked from &#x2018;package:base&#x2019;:&#xA;&#xA;    date&#xA;&#xA;Loading required package: sqldf&#xA;Loading required package: gsubfn&#xA;Loading required package: proto&#xA;Loading required package: RSQLite&#xA;Loading required package: partykit&#xA;Loading required package: grid&#xA;&#xA;Attaching package: &#x2018;grid&#x2019;&#xA;&#xA;The following object is masked from &#x2018;package:SparkR&#x2019;:&#xA;&#xA;    explode&#xA;&#xA;Loading required package: libcoin&#xA;Loading required package: mvtnorm&#xA;Loading required package: Formula&#xA;Classes &#x2018;data.table&#x2019; and 'data.frame':&#x9;50000 obs. of  32 variables:&#xA; $ ID_CLIENT                                : int  1 2 3 4 5 6 7 8 9 10 ...&#xA; $ ID_SHOP                                  : int  22 15 24 12 16 24 55 6 3 23 ...&#xA; $ SEX                                      : chr  &quot;F&quot; &quot;F&quot; &quot;F&quot; &quot;F&quot; ...&#xA; $ MARITAL_STATUS                           : chr  &quot;O&quot; &quot;S&quot; &quot;C&quot; &quot;C&quot; ...&#xA; $ AGE                                      : int  44 18 22 47 28 26 22 21 27 57 ...&#xA; $ QUANT_DEPENDANTS                         : int  0 0 0 0 0 0 0 0 0 0 ...&#xA; $ EDUCATION                                : chr  NA NA NA NA ...&#xA; $ FLAG_RESIDENCIAL_PHONE                   : chr  &quot;N&quot; &quot;Y&quot; &quot;Y&quot; &quot;N&quot; ...&#xA; $ AREA_CODE_RESIDENCIAL_PHONE              : int  31 31 31 31 31 31 31 23 31 31 ...&#xA; $ PAYMENT_DAY                              : int  12 20 8 25 25 28 12 28 20 12 ...&#xA; $ SHOP_RANK                                : int  0 0 0 0 0 0 0 0 0 0 ...&#xA; $ RESIDENCE_TYPE                           : chr  &quot;P&quot; &quot;P&quot; &quot;P&quot; &quot;P&quot; ...&#xA; $ MONTHS_IN_RESIDENCE                      : int  12 216 48 180 12 180 0 24 0 24 ...&#xA; $ FLAG_MOTHERS_NAME                        : chr  &quot;Y&quot; &quot;Y&quot; &quot;Y&quot; &quot;Y&quot; ...&#xA; $ FLAG_FATHERS_NAME                        : chr  &quot;Y&quot; &quot;Y&quot; &quot;N&quot; &quot;Y&quot; ...&#xA; $ FLAG_RESIDENCE_TOWNeqWORKING_TOWN        : chr  &quot;N&quot; &quot;Y&quot; &quot;Y&quot; &quot;N&quot; ...&#xA; $ FLAG_RESIDENCE_STATEeqWORKING_STATE      : chr  &quot;Y&quot; &quot;Y&quot; &quot;Y&quot; &quot;Y&quot; ...&#xA; $ MONTHS_IN_THE_JOB                        : int  48 12 12 24 12 0 48 12 0 96 ...&#xA; $ PROFESSION_CODE                          : int  731 853 40 35 24 999 999 40 950 13 ...&#xA; $ MATE_INCOME                              : num  0 0 0 0 0 0 0 800 0 0 ...&#xA; $ FLAG_RESIDENCIAL_ADDRESSeqPOSTAL_ADDRESS : chr  &quot;Y&quot; &quot;Y&quot; &quot;Y&quot; &quot;Y&quot; ...&#xA; $ FLAG_OTHER_CARD                          : chr  &quot;N&quot; &quot;N&quot; &quot;N&quot; &quot;N&quot; ...&#xA; $ QUANT_BANKING_ACCOUNTS                   : int  0 0 0 0 0 0 0 0 0 0 ...&#xA; $ PERSONAL_REFERENCE_1                     : chr  &quot;VERA&quot; &quot;SARA&quot; &quot;HELENA&quot; &quot;JACI&quot; ...&#xA; $ PERSONAL_REFERENCE_2                     : chr  &quot;LUCIA&quot; &quot;FELIPE&quot; &quot;DOMINGOS SOGRA&quot; &quot;VALERIA ALEXANDRA TRAJANO&quot; ...&#xA; $ FLAG_MOBILE_PHONE                        : chr  &quot;N&quot; &quot;N&quot; &quot;N&quot; &quot;N&quot; ...&#xA; $ FLAG_CONTACT_PHONE                       : chr  &quot;N&quot; &quot;N&quot; &quot;N&quot; &quot;N&quot; ...&#xA; $ PERSONAL_NET_INCOME                      : num  300 300 229 304 250 800 410 248 1000 856 ...&#xA; $ COD_APPLICATION_BOOTH                    : int  0 0 0 0 0 0 0 0 0 0 ...&#xA; $ QUANT_ADDITIONAL_CARDS_IN_THE_APPLICATION: int  0 0 0 0 0 0 0 0 0 0 ...&#xA; $ FLAG_CARD_INSURANCE_OPTION               : chr  &quot;N&quot; &quot;N&quot; &quot;N&quot; &quot;N&quot; ...&#xA; $ TARGET_LABEL                             : int  0 0 0 0 0 0 0 0 1 0 ...&#xA; - attr(*, &quot;.internal.selfref&quot;)=&lt;externalptr> &#xA;png &#xA;  2 &#xA;Warning messages:&#xA;1: no DISPLAY variable so Tk is not available &#xA;2: 'read.df(sqlContext...)' is deprecated.&#xA;Use 'read.df(path = NULL, source = NULL, schema = NULL, ...)' instead.&#xA;See help(&quot;Deprecated&quot;) "/>
  </paragraphs>
  <paragraphs name="ScoringModel_DataLoad_2019-06-17T11:36:10.851" title="Train\Test split" textVisible="true" resultVisible="true" titleVisible="true" status="SUCCESS">
    <body xsi:type="sse:CodeBody" interpreter="R" text="# train\test:&#xD;&#xA;library(caret)&#xD;&#xA;set.seed(4418)&#xD;&#xA;partition &lt;- createDataPartition(y = as.factor(DemoData$TARGET_LABEL), times = 1, p = 0.8)&#xD;&#xA;trainIdx &lt;- partition$Resample1&#xD;&#xA;testIdx &lt;- -partition$Resample1&#xD;&#xA;rm(partition)&#xD;&#xA;&#xD;&#xA;train &lt;- DemoData[trainIdx, ]&#xD;&#xA;test&lt;- DemoData[testIdx, ]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;print(ggplot() + &#xD;&#xA;  geom_bar(data = train, aes(x = &quot;train&quot;, fill = as.factor(TARGET_LABEL)), position = 'fill') + &#xD;&#xA;  geom_bar(data = test, aes(x = &quot;test&quot;, fill = as.factor(TARGET_LABEL)), position = 'fill') + &#xD;&#xA;  coord_flip() + &#xD;&#xA;  scale_fill_discrete(name = &quot;TARGET_LABEL&quot;, breaks = c(0,1), labels = c(0,1)) +&#xD;&#xA;  scale_x_discrete(name = &quot;dataset&quot;))&#xD;&#xA;  "/>
    <result xsi:type="sse:ImageResult" mimeType="image/png" base64data="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"/>
  </paragraphs>
</sse:Notebook>
